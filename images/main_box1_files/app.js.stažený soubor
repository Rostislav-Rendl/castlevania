// Generated by Haxe 3.4.7
(function () { "use strict";
var App = function() {
	this.nextPostOffset = 0;
	this.firstPosts = true;
	this.blogLoading = false;
	this.blogAutoLoad = false;
	this.win = $(App.window);
	this.win.resize($bind(this,this.onResize));
	$($bind(this,this.onReady));
	this.win.on("scroll.main",null,$bind(this,this.onScroll));
};
App.main = function() {
	App.window = window;
	window["_"] = new App();
};
App.get_JTHIS = function() {
	return $(this);
};
App.prototype = {
	onReady: function() {
		this.checkTips();
		$("#menuIcon, #clickTrap").click($bind(this,this.toggleMenu));
		this.onResize(null);
		this.initSlideshow();
		$("video").each(function(i,e) {
			var e1 = e;
			$(this).on("click",null,function(ev) {
				if(e1.paused) {
					e1.play();
				} else {
					if(e1.requestFullScreen != undefined) {
						e1.requestFullScreen();
					}
					if(e1.webkitRequestFullScreen != undefined) {
						e1.webkitRequestFullScreen();
					} else if(e1.mozRequestFullScreen != undefined) {
						e1.mozRequestFullScreen();
					}
				}
			});
		});
	}
	,checkTips: function(sub) {
		var _gthis = this;
		this.hideTip();
		var q = sub == null ? $(".tip") : sub.find(".tip");
		var _g_j;
		var _g_i = 0;
		_g_j = q.not(".tip_parsed");
		while(_g_i < _g_j.length) {
			var e = _g_j[_g_i++];
			var e1 = [$(e)];
			e1[0].addClass("tip_parsed");
			if(e1[0].attr("title") != null) {
				var txt = [e1[0].attr("title")];
				e1[0].removeAttr("title");
				var tmp = (function(txt1,e2) {
					return function(_) {
						_gthis.showTip(e2[0],txt1[0]);
					};
				})(txt,e1);
				var tmp1 = (function() {
					return function(_1) {
						_gthis.hideTip();
					};
				})();
				e1[0].hover(tmp,tmp1);
				var tmp2 = (function() {
					return function(_2) {
						_gthis.hideTip();
					};
				})();
				e1[0].click(tmp2);
			}
		}
	}
	,showTip: function(e,txt) {
		this.createBubbleTip(e,"simpleTip",txt,true);
	}
	,hideTip: function() {
		$("#simpleTip").remove();
	}
	,createBubbleTip: function(e,id,html,hideOnOver) {
		$("#" + id).remove();
		if(e == null || e.length == 0) {
			return;
		}
		html = StringTools.replace(html,"\\n","<br/>");
		var ptr = $("<div id=\"" + id + "\"><img class=\"arrow\" alt=\"\"/><div class=\"inner\">" + html + "</div></div>");
		$("body").prepend(ptr);
		var of = e.offset();
		var w = e.outerWidth();
		var ptrWidth = ptr.width();
		if(hideOnOver) {
			ptr.mouseover(function(_) {
				$("#" + id).remove();
			});
		}
		var y = of.top - ptr.height() - 7;
		var left = w * 0.5 + of.left - ptrWidth * 0.5;
		var bw = Math.max($("body").width(),of.left + w);
		var aLeft = ptrWidth * 0.5 - 5;
		var aTop = ptr.height() - 1;
		if(left < 0) {
			aLeft += left;
			left = 0;
		} else if(left + ptrWidth > bw) {
			aLeft += left + ptrWidth - bw;
			left = bw - ptrWidth;
		}
		var arrow = "simpleTipArrow.png";
		if(y < 5) {
			y = of.top + e.outerHeight() + 7;
			aTop = -6;
			arrow = "simpleTipArrowUp.png";
		}
		ptr.find(".arrow").attr("src","/img/" + arrow).css({ marginLeft : aLeft, marginTop : aTop});
		ptr.css("opacity","0.1").css({ top : y - 5, left : left}).animate({ opacity : 1, top : y},200,"linear");
	}
	,onScroll: function(e) {
		var p = App.window.scrollY;
		if(p > 0) {
			$("body").addClass("scrolled");
		} else {
			$("body").removeClass("scrolled");
		}
		if(this.blogAutoLoad && !this.blogLoading) {
			var b = $("#blog");
			var t = b.height() + b.offset().top;
			var scroll = App.window.scrollY + $(App.window).height();
			if(scroll >= t + 30) {
				this.loadBlog(this.nextPostOffset);
			}
		}
	}
	,loadBlog: function(start,length,infinite) {
		if(length == null) {
			length = 20;
		}
		this.nextPostOffset = start + length;
		var url = "/posts/" + start + "/" + length;
		this.blogLoading = true;
		$.ajax(url).done($bind(this,this.onBlogPosts));
		if(infinite) {
			this.blogAutoLoad = true;
		}
	}
	,onBlogPosts: function(ev) {
		var _gthis = this;
		var posts = $(ev);
		if(posts.length == 0) {
			this.blogAutoLoad = false;
		}
		var photos = posts.filter(".post.p_photos").find(".photo");
		photos.each(function(i,e) {
			var q = $(e);
			if(q.data("width") > q.width() || q.data("height") > q.height()) {
				q.on("click.zoom",null,function(ev1) {
					_gthis.startBlogSlideshow(q);
				});
				q.addClass("zoomable");
			} else {
				q.on("click.zoom");
				q.removeClass("zoomable");
			}
		});
		$("#blog").append(posts);
		if(this.firstPosts) {
			this.firstPosts = false;
			var h = window.location.hash;
			if(new EReg("^#([0-9]+)$","").match(h)) {
				var idx = Std.parseInt(HxOverrides.substr(h,1,null));
				this.scrollVisible($("#blog .post").eq(idx),true);
			}
		}
		this.blogLoading = false;
		this.onScroll(null);
	}
	,trySteamUrl: function(a) {
		var steamUrl = a.data("steam");
		if(steamUrl == null) {
			return true;
		}
		try {
			window.document.location = steamUrl;
			return false;
		} catch( e ) {
			console.log(e);
			return true;
		}
	}
	,hideBlogSlideshow: function() {
		$("#bslideshow").remove();
		$("body").off("keydown.bslideshow");
	}
	,startBlogSlideshow: function(q) {
		var _gthis = this;
		this.hideBlogSlideshow();
		var all = q.parentsUntil(".post").parent().find(".photo");
		var g = $("<div id=\"bslideshow\"></div>");
		var container = $("<div class=\"container\"></div>");
		container.on("click",null,function(ev) {
			_gthis.hideBlogSlideshow();
		});
		g.append(container);
		var first = 0;
		var total = 0;
		var content = $("<table class=\"content\"><tr></tr></table>");
		container.append(content);
		var _g_j;
		var _g_i = 0;
		_g_j = all;
		while(_g_i < _g_j.length) {
			var c = _g_j[_g_i++];
			var e = $(c);
			var url = e.data("url");
			content.find("tr").append("<td><img src=\"" + url + "\" data-idx=\"" + total + "\"/></td>");
			if(c == q[0]) {
				first = total;
			}
			total += 1;
		}
		var setCur = function(idx) {
			if(idx < 0) {
				idx = 0;
			}
			if(idx > total - 1) {
				idx = total - 1;
			}
			$("#bslideshow img.current").removeClass("current");
			$("#bslideshow img").eq(idx).addClass("current");
			_gthis.onResize(null);
		};
		content.find("img").each(function(i,e1) {
			var img = $(e1);
			img.on("load",null,function(ev1) {
				var tmp = $("#bslideshow img.current").data("idx") | 0;
				setCur(tmp);
			});
			img.on("click",null,function(ev2) {
				ev2.stopPropagation();
				var idx1 = img.data("idx") | 0;
				if(img["is"](".current")) {
					var r = ev2.offsetX / img.width();
					if(r > 0.4) {
						if(idx1 + 1 >= total) {
							_gthis.hideBlogSlideshow();
						} else {
							setCur(idx1 + 1);
						}
					} else if(r < 0.3) {
						setCur(idx1 - 1);
					}
				} else {
					setCur(idx1);
				}
			});
		});
		$("body").prepend(g).on("keydown.bslideshow",null,function(ev3) {
			var _g = ev3.which;
			switch(_g) {
			case 27:
				_gthis.hideBlogSlideshow();
				break;
			case 37:
				var tmp1 = $("#bslideshow img.current").data("idx") - 1 | 0;
				setCur(tmp1);
				break;
			case 39:
				var tmp2 = $("#bslideshow img.current").data("idx") + 1 | 0;
				setCur(tmp2);
				break;
			}
		});
		setCur(first);
	}
	,initSlideshow: function() {
		var currentIndex = 0;
		var items = $("#slideShowWrapper .slide");
		var itemAmt = items.length;
		var cycleItems = function() {
			var item = $("#slideShowWrapper .slide").eq(currentIndex);
			items.hide();
			item.css("display","inline-block");
		};
		var autoSlide = App.window.setInterval(function() {
			currentIndex += 1;
			if(currentIndex > itemAmt - 1) {
				currentIndex = 0;
			}
			cycleItems();
		},3000);
		$("#next").click(function(e) {
			e.preventDefault();
			e.stopPropagation();
			App.window.clearInterval(autoSlide);
			currentIndex += 1;
			if(currentIndex > itemAmt - 1) {
				currentIndex = 0;
			}
			cycleItems();
		});
		$("#previous").click(function(e1) {
			e1.preventDefault();
			e1.stopPropagation();
			App.window.clearInterval(autoSlide);
			currentIndex -= 1;
			if(currentIndex < 0) {
				currentIndex = itemAmt - 1;
			}
			cycleItems();
		});
	}
	,onResize: function(e) {
		if($("#bslideshow").length > 0) {
			var content = $("#bslideshow .content");
			var container = $("#bslideshow .container");
			var cur = content.find("img.current");
			var v = container.width() * 0.5 - cur.position().left - cur.width() * 0.5;
			content.css("margin-left",v);
		}
		var vw = this.win.width();
		var vh = this.win.height();
		var iframe = $(".trailer iframe");
		var videoW = Math.min(Math.min(1280,vw),1.777 * (vh - 180)) | 0;
		var videoH = videoW / 1.777 | 0;
		var m = Math.max(20,videoH / 12) | 0;
		iframe.css({ width : videoW, height : videoH, "margin-top" : m});
		var h = videoH + 2 * m;
		var castle = $("#bigCastle");
		castle.height(h);
		var sw = Math.min(1920,videoW / 1280 * 1920) | 0;
		var sh = Math.min(840,videoW / 1280 * 840) | 0;
		castle.css({ "background-size" : sw + "px " + sh + "px"});
	}
	,toggleMenu: function(e) {
		if($("#mobileNav")["is"](".mobileHidden")) {
			$("#mobileNav, #clickTrap").removeClass("mobileHidden");
		} else {
			$("#mobileNav, #clickTrap").addClass("mobileHidden");
		}
	}
	,scrollVisible: function(e,instant) {
		if(instant == null) {
			instant = false;
		}
		var p;
		if(e == null || e.length == 0) {
			p = 0;
		} else {
			p = e.offset().top - 75;
		}
		var q = $("html,body").stop();
		if(instant) {
			q.scrollTop(p);
		} else {
			q.animate({ scrollTop : p},500,null);
		}
	}
	,initPatchnotes: function() {
		var _gthis = this;
		var checkHash = function() {
			var h = App.window.location.hash;
			if(h != null && HxOverrides.substr(h,0,2) == "#v") {
				var checkHash1 = HxOverrides.substr(h,2,null);
				_gthis.subPatch(checkHash1);
			} else {
				_gthis.subPatch(null);
			}
		};
		checkHash();
		$(App.window).on("popstate",null,function(ev) {
			checkHash();
		});
	}
	,subPatch: function(version) {
		if(version == "") {
			version = null;
		}
		$("h3.version").hide();
		if(version != null) {
			$("h3#t" + version.split(".").join("_")).show();
		}
		$("li.patchnote").each(function(i,e) {
			var note = $(e);
			if(version != null) {
				if(note.data("patch") == version) {
					note.show();
				} else {
					note.hide();
				}
			} else if(note.data("major")) {
				note.show();
			} else {
				note.hide();
			}
		});
		if(version != null) {
			$("li.patchnote span.subPatch").hide();
		} else {
			$("li.patchnote span.subPatch").show();
		}
		$("h3.category").each(function(i1,e1) {
			var h3 = $(e1);
			if(h3.parent().find("ul li.patchnote:visible").length == 0) {
				h3.hide();
			} else {
				h3.show();
			}
		});
	}
};
var EReg = function(r,opt) {
	this.r = new RegExp(r,opt.split("u").join(""));
};
EReg.prototype = {
	match: function(s) {
		if(this.r.global) {
			this.r.lastIndex = 0;
		}
		this.r.m = this.r.exec(s);
		this.r.s = s;
		return this.r.m != null;
	}
};
var HxOverrides = function() { };
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
var Std = function() { };
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) {
		v = parseInt(x);
	}
	if(isNaN(v)) {
		return null;
	}
	return v;
};
var StringTools = function() { };
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
App.main();
})();
